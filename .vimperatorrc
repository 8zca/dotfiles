
" load scripts/styles {{{
colorscheme abyss
style -name tree-style-tab chrome://* .tabs-newtab-button { display: none !important; }
source ~/.vimperatorrc.css
" }}}

" set! {{{

" チカチカするのはイヤ (<blink>)
set! browser.blink_allowed=false

" 勝手に画像を小さくしない
set! browser.enable_automatic_image_resizing=false

" 常に新しいタブで開く
set! browser.link.open_newwindow=3
set! browser.link.open_newwindow.restriction=0

" 最後のタブを閉じてもFirefoxは終了しない
set! browser.tabs.closeWindowWithLastTab=false

" バックグラウンドでタブを開く
set! browser.tabs.loadBookmarksInBackground=true
set! browser.tabs.loadDivertedInBackground=true

" 補完候補をたくさん出す
set! browser.urlbar.maxRichResults=30

" 「アドオンを入手」のペインを消す
set! extensions.getAddons.showPane=false

" HTTP接続の設定
set! network.http.max-connections=32
set! network.http.max-connections-per-server=16
set! network.http.max-persistent-connections-per-proxy=16
set! network.http.max-persistent-connections-per-server=8
set! network.http.pipelining=true
set! network.http.pipelining.maxrequests=8
set! network.http.pipelining.ssl=true
set! network.http.proxy.pipelining=true

" リダイレクトループ防止
set! network.http.redirection-limit=10

" URLエンコーディングにUTF-8を使う
set! network.standard-url.encode-query-utf8=true

" キャレットを太く
set! ui.caretWidth=5

" アクセスキーを殺す
set! ui.generalAccessKey=0

" LDRでたくさんピンを開けるようにする
set! dom.popup_maximum=65536

set! config.trim_on_minimize=true
set! javascript.options.jit.content=true
set! javascript.options.jit.chrome=true
set! network.dns.disableIPv6=true
" }}}

" set {{{
set activate=quickmark,tabopen,paste
set complete=tls
set editor=vim
set focuscontent
set hlsearch
set noincsearch
set insertmode
set laststatus=2
set newtab=all
set popups=tab
set showmode
set showstatuslinks=1
set showtabline=2
set titlestring=Firefox\ (w/Vimperator)
set verbose=5
set visualbell
set wildmode=list:full
set wildoptions=sort
" }}}

" commands {{{
js <<EOM
[
	[
		['hatena'],
		'access to ?',
		function (args) {
			args = args.string.split(' ');
			var user = args.pop();
			var host = args.length > 0 ? args : ['www'];
			var url  = 'http://' + host.join('.') + '.hatena.ne.jp/' + user + '/';
			liberator.open(url, liberator.NEW_TAB);
		}
	],
].forEach(function ([cmd, desc, action]) {
	commands.addUserCommand(cmd, desc, action)
});
EOM
" }}}

" key maps (normal) {{{
noremap ` :hsearch<Space>
noremap U :undo<CR>
noremap <silent> y :copy url<CR>
noremap j     5<C-e>
noremap k     5<C-y>
noremap J     5<C-e>
noremap K     5<C-y>

" 履歴をundo/redoと考える
noremap u <C-o>
noremap <C-r> <C-i>

noremap h <C-n>
noremap l <C-p>
noremap d <C-w>
noremap <C-m> <CR>
noremap <BS> <Nop>

noremap ,. :unmap<CR>:iunmap<CR>:cunmap<CR>:source<Space>~/.vimperatorrc<CR>
noremap ,s :subscldr<Space>
noremap ,h :hatena<Space>
noremap ,c :copy<Space>
noremap ,C :copy!<Space>
noremap ,t :tombloo<Space>
" }}}

" key maps (command line) {{{
cmap <C-n> <Tab>
cmap <C-p> <S-Tab>
cnoremap <C-m> <CR>
cnoremap <C-[> <ESC>
cnoremap <C-d> <Delete>
cnoremap <C-h> <BS>
cnoremap <C-b> <Left>
cnoremap <C-f> <Right>
cnoremap <C-a> <Home>
cnoremap <C-e> <End>

" 括弧/引用符の補完
cnoremap \" ""<Left>
cnoremap \' ''<Left>
cnoremap ( ()<Left>
cnoremap [ []<Left>
cnoremap { {}<Left>

cnoremap <C-y> <S-Insert>
" }}}

" key maps (insert mode) {{{
inoremap <C-[> <ESC>
inoremap <C-y> <S-Insert>
inoremap <C-h> <BS>
inoremap <C-m> <CR>
" }}}

" plugins {{{
let g:asdfghjkl_default = 'true'

autocmd LocationChange .* :fmapc
autocmd LocationChange 'reader\.livedoor\.com/reader' :fmap! j k s a p o v c <Space> <S-Space> z b < > <S-z> r q

let g:ex_ime_mode = "inactive"

let g:ldrc_intelligence_bind = "true"

let g:yahoo_app_id = 'Rq4MSQmxg67XgeUd11yG7AUu3gWW30JLthbvYbWQMekFZwSc_jvoHbFesbF6lGz8'

js <<EOM
// copy.js
liberator.globalVariables.copy_templates = [
	{ label: 'url', value: '%URL%' },
	{ label: 'title', value: '%TITLE%' },
	{ label: 'hatena::anchor', value: '[%URL%:title=%TITLE%]' },
	{ label: 'hatena::quote', value: '>%URL%:title=%TITLE%>\n%SEL%\n<<' },
	{ label: 'hatena::asin', value: 'copy ASIN code as ASIN/ISBN syntax (Hatena)', custom: function(){
		return '[asin:' + content.document.getElementById('ASIN').value + ':title]';
	} },
	{ label: 'amazon', value: 'Copy URL from Amazon', custom: function () {
		return 'http://www.amazon.co.jp/o/ASIN/' + content.document.getElementById('ASIN').value;
	} },
];

// Hatena Bookmark Extension
liberator.globalVariables.hBookmark_shortcuts = {
	add: ['b'],
	comment: ['c'],
};

if (typeof hBookmark != 'undefined') {
	liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});
}
EOM
" }}}

" vim: set ft=vimperator:
