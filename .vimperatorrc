" load scripts/styles {{{
colorscheme abyss
style -name tree-style-tab chrome://* .tabs-newtab-button { display: none !important; }
source ~/.vimperatorrc.css
" }}}

" quickmarks {{{
qmark c https://www.google.com/calendar/
qmark d http://doc.google.com/
qmark f http://favotter.net/user/aereal
qmark g https://mail.google.com/mail/
qmark k http://wiki.kumetan.net/
qmark l http://reader.livedoor.com/reader/
qmark s http://favstar.fm/users/aereal/recent
qmark t http://twitter.com/
" }}}

" set! {{{

" チカチカするのはイヤ (<blink>)
set! browser.blink_allowed=false

" 勝手に画像を小さくしない
set! browser.enable_automatic_image_resizing=false

" 常に新しいタブで開く
set! browser.link.open_newwindow=3
set! browser.link.open_newwindow.restriction=0

" 最後のタブを閉じてもFirefoxは終了しない
set! browser.tabs.closeWindowWithLastTab=false

" バックグラウンドでタブを開く
set! browser.tabs.loadBookmarksInBackground=true
set! browser.tabs.loadDivertedInBackground=true

" 補完候補をたくさん出す
set! browser.urlbar.maxRichResults=30

" ダウンロードマネージャはいらない
set! browser.download.manager.showWhenStarting=false

" 「アドオンを入手」のペインを消す
set! extensions.getAddons.showPane=false

" HTTP接続の設定
set! network.http.max-connections=32
set! network.http.max-connections-per-server=16
set! network.http.max-persistent-connections-per-proxy=16
set! network.http.max-persistent-connections-per-server=8
set! network.http.pipelining=true
set! network.http.pipelining.maxrequests=8
set! network.http.pipelining.ssl=true
set! network.http.proxy.pipelining=true

" リダイレクトループ防止
set! network.http.redirection-limit=10

" URLエンコーディングにUTF-8を使う
set! network.standard-url.encode-query-utf8=true

" キャレットを太く
set! ui.caretWidth=5

" アクセスキーを殺す
set! ui.generalAccessKey=0

" LDRでたくさんピンを開けるようにする
set! dom.popup_maximum=65536

" 前回開いていたタブを開く
set! browser.startup.page=3

" タブを閉じるボタンを表示しない
set! browser.tabs.closeButtons=2

set! config.trim_on_minimize=true
set! javascript.options.jit.content=true
set! javascript.options.jit.chrome=true
set! network.dns.disableIPv6=true
" }}}

" set {{{
set activate=quickmark,tabopen,paste
set complete=tHls
set editor=vim
set focuscontent
set guioptions-=H
set hlsearch
set noincsearch
set insertmode
set laststatus=2
set newtab=all
set popups=tab
set showmode
set showstatuslinks=1
set showtabline=2
set titlestring=Firefox\ (w/Vimperator)
set verbose=5
set visualbell
set wildmode=list:full
set wildoptions=sort
" }}}

" key maps (normal) {{{
noremap U :undo<CR>
noremap <silent> y :copy url<CR>
noremap j     5<C-e>
noremap k     5<C-y>
noremap J     5<C-e>
noremap K     5<C-y>

" 履歴をundo/redoと考える
noremap u <C-o>
noremap <C-r> <C-i>

noremap h <C-n>
noremap l <C-p>
noremap d <C-w>
noremap <C-m> <CR>
noremap <BS> <Nop>
noremap w <Nop>

noremap ,. :unmap<CR>:iunmap<CR>:cunmap<CR>:source<Space>~/.vimperatorrc<CR>
noremap ,s :subldr<CR>
noremap ,h :accesshatena<Space>
noremap ,H :accesshatena!<Space>
noremap ,c :copy<Space>
noremap ,C :copy!<Space>
noremap ,t :tombloo<Space>
noremap ,T :tombloo!<Space>
noremap ,b :sbm<Space>
noremap ,v :viewSBMComments<CR>
noremap ,w :twittperator
" }}}

" key maps (command line) {{{
cmap <C-n> <Tab>
cmap <C-p> <S-Tab>
cmap <C-l> <Nop>
cnoremap <C-m> <CR>
cnoremap <C-[> <ESC>
cnoremap <C-d> <Delete>
cnoremap <C-h> <BS>
cnoremap <C-b> <Left>
cnoremap <C-f> <Right>
cnoremap <C-a> <Home>
cnoremap <C-e> <End>

" 括弧/引用符の補完
cnoremap \" ""<Left>
cnoremap \' ''<Left>
cnoremap ( ()<Left>

cnoremap <C-y> <S-Insert>
" }}}

" key maps (insert mode) {{{
inoremap <C-[> <ESC>
inoremap <C-y> <S-Insert>
inoremap <C-h> <BS>
inoremap <C-m> <CR>
inoremap <C-n> <Down>
inoremap <C-p> <Up>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-b> <Left>
inoremap <C-f> <Right>
" }}}

" plugins {{{
let g:asdfghjkl_default = 'true'
let g:asdfghjkl_hintchars = '-asdfghjkl'

autocmd LocationChange .* :fmapc
autocmd LocationChange 'reader\.livedoor\.com/reader' :fmap! j k s a p o v c <Space> <S-Space> z b < > <S-z> r q g
autocmd LocationChange 'mail\.google\.com/mail' :fmap! c / j k n p o u e x s r a # [ ] z ? gi gs gt gd ga gc * !

let g:ldrc_intelligence_bind = "true"
let g:direct_sbm_use_services_by_tag = "h"
let g:direct_sbm_use_services_by_post = "h"
let g:direct_sbm_is_use_migemo = "true"
let g:direct_sbm_is_normalize = "false"

js <<EOM
// copy.js
liberator.globalVariables.copy_templates = [
	{ label: 'url', value: '%URL%' },
	{ label: 'title', value: '%TITLE%' },
	{ label: 'hatena::anchor', value: '[%URL%:title=%TITLE%]' },
	{ label: 'hatena::quote', value: '>%URL%:title=%TITLE%>\n%SEL%\n<<' },
	{ label: 'hatena::asin', value: 'copy ASIN code as ASIN/ISBN syntax (Hatena)', custom: function(){
		return '[asin:' + content.document.getElementById('ASIN').value + ':title]';
	} },
	{ label: 'amazon', value: 'Copy URL from Amazon', custom: function () {
		return 'http://www.amazon.co.jp/o/ASIN/' + content.document.getElementById('ASIN').value;
	} },
];

commands.addUserCommand(
	["subldr"],
	"Subscribe feed with livedoor Reader.",
	function() {
		var url = buffer.URL;
		var endPoint = "http://reader.livedoor.com/subscribe/";
		liberator.open(endPoint + url, liberator.NEW_TAB);
	},
	{},
	true
);

// Show feed-button to statusbar
(function() {
	var feedPanel = document.createElement('statusbarpanel');
	var feedButton = document.getElementById('feed-button');
	feedPanel.setAttribute('id', 'feed-panel-clone');
	feedPanel.appendChild(feedButton.cloneNode(true));
	feedButton.parentNode.removeChild(feedButton);
	document.getElementById('status-bar').insertBefore(
		feedPanel,
		document.getElementById('security-button')
	);
})();

if (typeof hBookmark != 'undefined') {
	liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});
	liberator.globalVariables.hBookmark_bangFunction = 'openNewTab';
}
EOM
" }}}

