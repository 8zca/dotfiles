# vim:set ft=snippet noet:
snippet pl
	#!/usr/bin/env perl

	use strict;
	use warnings;
alias shebang

snippet pm
	package ${1:Package::Name}

	use strict;
	use warnings;

snippet tpm
	package t::${1:Test::Package::Name}

	use strict;
	use warnings;
	use Test::More;

	${2}

	done_testing;

snippet use
	use ${1:Package};

snippet uselib
	use lib 'lib', glob "${1:Package}";

snippet given
	given (${1:subject}) {
		when (${2:condition}) {${3}}
	}

snippet when
	when (${1:condition}) {${2}}

snippet ddd
	use Data::Dumper qw(Dumper);
	sub p ($) { print Dumper(shift) }
	${1}

snippet map
	map { ${1:$_} } ${2:@list}

snippet grep
	grep { ${1:$_} } ${2:@list}

snippet     sub_self
options     head
	sub ${1:method} {
		my ($self${2:#:rest args}) = @_;
		${3:# body}
	}

snippet     sub_class
options     head
	sub ${1:method} {
		my ($class${2:#:rest args}) = @_;
		${3:#:# body}
	}

snippet     package
options     head
	package ${1:`substitute(substitute(expand('%:p:r'), '.*/lib/', '', 'g'), '/', '::', 'g')`};

snippet     package_block
options     head
	package ${1:`substitute(substitute(expand('%:p:r'), '.*/lib/', '', 'g'), '/', '::', 'g')`} {
		${2:#:body}
	};

snippet     t
options     head
	package ${1:`substitute(substitute(expand('%:p:r'), '.*/t/', 't-', 'g'), '-', '::', 'g')`};
