# vim:set ft=zsh:

git_info() { # {{{
  # http://d.hatena.ne.jp/uasi/20091025/1256458798
  if [[ $(git rev-parse --is-inside-work-tree 2>/dev/null) != "true" ]]; then
    return
  fi

  local git==git
  local st color annotation stashes

  local name=$($git symbolic-ref --short HEAD 2> /dev/null)
  name=${name:="(detached)"}

  local git_dir=$($git rev-parse --git-dir 2> /dev/null)
  local action=$(VCS_INFO_git_getaction "$git_dir")
  action=${action:+"($action)"}

  # Remote and Local changes {{{
  local \
    threshold \
    current_remote \
    merge_name \
    remote_ref \
    revs_count \
    behind_count \
    ahead_count \
    behind_and_ahead

  current_remote=$($git config branch.${name}.remote 2> /dev/null)
  merge_name=$($git config branch.${name}.merge 2> /dev/null)

  local is_tracked
  local -a remote_local_revs
  if [[ "." = "$current_remote" ]] || [[ "x" = "x$current_remote" ]]; then
    # Clone from local
    remote_ref=$merge_name
    remote_local_revs=($($git rev-list --left-right ${merge_name}...HEAD))
    is_tracked=""
  else
    remote_ref="refs/remotes/${current_remote}/${merge_name#refs/heads/}"
    remote_local_revs=($($git rev-list --left-right ${remote_ref}...HEAD))
    is_tracked=" %{${fg[green]}%}♨%{${reset_color}%}"
  fi

  local ahead_commits_color="${fg[green]}"
  local behind_commits_color="${fg[red]}"
  local ahead_annotation="+"
  local behind_annotation="-"

  revs_count=$#remote_local_revs

  local -a behind_commits ahead_commits
  behind_commits=(${(M)remote_local_revs:#<*})
  ahead_commits=(${(M)remote_local_revs:#>*})
  ahead_count=$#ahead_commits
  behind_count=$#behind_commits

  if [[ $ahead_count -gt 0 ]]; then
    behind_and_ahead="${behind_and_ahead} %{$ahead_commits_color%}${ahead_annotation}${ahead_count}%f%b"
  fi
  if [[ $behind_count -gt 0 ]]; then
    behind_and_ahead="${behind_and_ahead} %{$behind_commits_color%}${behind_annotation}${behind_count}%f%b"
  fi
  # }}}

  # stashes count {{{
  declare -a stashes_count
  local stash_annotation="⟐"
  stashes_count=($($git stash list --format='format:%h' 2> /dev/null))
  if [[ $#stashes_count > 0 ]]; then
    stashes=" %{${fg[yellow]}%}${stash_annotation}$#stashes_count"
  fi
  # }}}

  st=$($git status --short --porcelain -b 2> /dev/null)

  # Staged changes {{{
  if [[ -n `echo "$st" | grep "^[UMADRC]"` ]]; then
    # Staged
    color=%F{yellow}
    annotation="${annotation}${color}*"
  fi
  # }}}

  # Untracked changes {{{
  if [[ -n `echo "$st" | grep "??"` ]]; then
    # Untracked
    color=%F{yellow}
    annotation="${annotation}${color}?%f"
  fi
  # }}}

  # Changed, but not staged {{{
  if [[ -n `echo "$st" | grep "^[ ][MD]"` ]]; then
    # Changed, but not staged
    color=%F{red}
    annotation="${annotation}${color}!%f"
  fi
  # }}}

  if [[ -z "$color" ]]; then
    color=%F{green}
  fi

  echo "${color}${name}${action}${annotation}${behind_and_ahead}${stashes}%f%b${is_tracked}"
} # }}}
