#!/bin/bash

set -e

root_dir=.

json_satisfy() {
  jq --exit-status "$2" < $1 >/dev/null
}

pkg_satisfy() {
  json_satisfy ${root_dir}/package.json "$1"
}

if [[ ! -d "${root_dir}/.git" ]]; then
  echo '---> Not Git repository'
  echo '---> Try to git init ...'
  git init
  git commit --allow-empty --message ':sunrise:'
fi

if [[ ! -f "${root_dir}/package.json" ]]; then
  echo '---> npm init ...'
  npm init --yes
fi

if ! git check-ignore --quiet 'node_modules'; then
  echo '---> Ignore node_modules ...'
  echo 'node_modules' >> .gitignore
fi

if ! pkg_satisfy '.devDependencies | has("typescript")'; then
  echo '---> Install TypeScript ...'
  npm install --save-dev typescript
fi

if [[ ! -f "${root_dir}/tsconfig.json" ]]; then
  echo '---> Create tsconfig.json ...'
  $(npm bin)/tsc --init
fi

if ! json_satisfy ${root_dir}/tsconfig.json '.compilerOptions.target == "es5"'; then
  echo '---> Set target version to ES5 ...'
  cat "${root_dir}/tsconfig.json" | jq --unbuffered 'map_values(if type == "object" and has("target") then .target = "es5" else . end)' | tee "${root_dir}/tsconfig.json"
fi

if ! json_satisfy ${root_dir}/tsconfig.json '.compilerOptions.noImplicitAny == true'; then
  echo '---> Refuse implicit any ...'
  cat "${root_dir}/tsconfig.json" | jq --unbuffered 'map_values(if type == "object" and has("noImplicitAny") then .noImplicitAny = true else . end)' | tee "${root_dir}/tsconfig.json"
fi

if ! pkg_satisfy '.scripts.build == "tsc"'; then
  echo '---> Configure npm run build'
  cat "${root_dir}/package.json" | jq 'map_values(if type == "object" and has("test") then .build = "tsc" else . end)' | tee ${root_dir}/package.json
fi

if ! pkg_satisfy '.devDependencies | has("dtsm")'; then
  echo '---> Install dtsm ...'
  npm install --save-dev dtsm
fi

if [[ ! -f "${root_dir}/dtsm.json" ]]; then
  echo '---> Generate dtsm.json'
  $(npm bin)/dtsm --insight false init
fi

if ! git check-ignore --quiet 'typings'; then
  echo '---> Ignore typings ...'
  echo 'typings' >> .gitignore
fi
